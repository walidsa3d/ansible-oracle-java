---
- name: Ensure Java installation directory exists
  ansible.builtin.file:
    path: "{{ java_install_dir }}"
    state: directory
    mode: '0755'

- name: Download Oracle Java
  ansible.builtin.get_url:
    url: "{{ java_url }}"
    dest: "/tmp/jdk-{{ java_version }}_linux-x64_bin.tar.gz"

- name: Extract Oracle Java
  ansible.builtin.unarchive:
    src: "/tmp/jdk-{{ java_version }}_linux-x64_bin.tar.gz"
    dest: "{{ java_install_dir }}"
    remote_src: true

- name: Update alternatives for java
  ansible.builtin.command: update-alternatives --install /usr/bin/java java {{ java_extracted_dir }}/bin/java 1

- name: Update alternatives for javac
  ansible.builtin.command: update-alternatives --install /usr/bin/javac javac {{ java_extracted_dir }}/bin/javac 1

- name: Set Oracle Java as the default
  ansible.builtin.command: update-alternatives --set java {{ java_extracted_dir }}/bin/java

- name: Set Oracle Javac as the default
  ansible.builtin.command: update-alternatives --set javac {{ java_extracted_dir }}/bin/javac

- name: Set JAVA_HOME environment variable
  ansible.builtin.lineinfile:
    path: /etc/profile.d/java.sh
    state: present
    create: true
    line: "export JAVA_HOME={{ java_extracted_dir }}"
    mode: '0755'

- name: Load the JAVA_HOME environment variable
  ansible.builtin.shell: source /etc/profile.d/java.sh
    args:
      executable: /bin/bash

- name: Verify Java installation
  ansible.builtin.command: java -version
  register: java_version_output

- name: Print Java version
  ansible.builtin.debug:
    msg: "{{ java_version_output.stdout }}"
